function Block.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push pointer 0
return
function Block.getCoord 1
push argument 0
pop pointer 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
pop local 0
goto IF_END0
label IF_FALSE0
push this 1
pop local 0
label IF_END0
push local 0
return
function Block.newRandBlock 8
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 7
label WHILE_EXP0
push local 2
push argument 1
lt
not
if-goto WHILE_END0
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
not
call Block.getCoord 2
pop local 3
push local 6
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 7
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push argument 3
lt
not
if-goto WHILE_END1
push local 2
push argument 2
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
not
call Block.getCoord 2
pop local 3
push local 6
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 7
label IF_FALSE1
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
label WHILE_EXP2
push local 7
not
if-goto WHILE_END2
push constant 0
pop local 7
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
push constant 0
pop local 2
label WHILE_EXP3
push local 2
push argument 1
lt
not
if-goto WHILE_END3
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
not
call Block.getCoord 2
pop local 3
push local 6
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 7
label IF_FALSE2
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP3
label WHILE_END3
push constant 0
pop local 2
label WHILE_EXP4
push local 2
push argument 3
lt
not
if-goto WHILE_END4
push local 2
push argument 2
add
pop pointer 1
push that 0
pop local 6
push local 6
push constant 0
not
call Block.getCoord 2
pop local 3
push local 6
push constant 0
call Block.getCoord 2
pop local 4
push local 3
push local 0
eq
push local 4
push local 1
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 7
label IF_FALSE3
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP4
label WHILE_END4
goto WHILE_EXP2
label WHILE_END2
push local 0
push local 1
call Block.new 2
pop local 5
push local 5
call Block.drawRandBlock 1
pop temp 0
push local 5
return
function Block.matched 5
push constant 0
pop local 4
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 0
push argument 0
push constant 0
call Block.getCoord 2
pop local 1
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
pop local 0
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
sub
pop local 1
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push argument 1
push constant 0
not
call Block.getCoord 2
pop local 2
push argument 1
push constant 0
call Block.getCoord 2
pop local 3
push local 0
push local 2
eq
push local 1
push local 3
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 4
label IF_FALSE4
push local 4
return
function Block.drawFullBlock 8
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 6
push argument 0
push constant 0
call Block.getCoord 2
pop local 7
push local 6
push static 0
call Math.multiply 2
push static 1
add
pop local 0
push local 6
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 2
push local 7
push static 0
call Math.multiply 2
push static 1
add
pop local 1
push local 7
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 3
push local 0
push local 2
add
push constant 2
call Math.divide 2
pop local 4
push local 1
push local 3
add
push constant 2
call Math.divide 2
pop local 5
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
call Screen.setColor 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 0
call Screen.setColor 1
pop temp 0
label IF_END0
push local 4
push local 5
push constant 5
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Block.drawHFullBlock 2
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 0
push argument 0
push constant 0
call Block.getCoord 2
pop local 1
push local 0
push static 0
call Math.multiply 2
push static 1
add
pop local 0
push local 1
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 1
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 1
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push constant 1
add
push local 0
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
push local 1
push local 0
push constant 8
add
push local 1
push constant 8
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push local 1
push constant 1
add
push local 0
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 2
add
push local 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 7
add
push local 1
push constant 9
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 1
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push constant 2
add
push local 0
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 0
push constant 8
add
push local 1
push constant 8
add
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 9
add
push local 1
push constant 1
add
push local 0
push constant 9
add
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push constant 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push local 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 1
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push constant 1
add
push local 0
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
push local 1
push local 0
push constant 8
add
push local 1
push constant 9
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 9
add
push local 1
push constant 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push constant 9
add
push local 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 1
call Screen.setColor 1
pop temp 0
push local 0
push constant 9
add
push local 1
push constant 1
add
push local 0
push constant 9
add
push local 1
push constant 8
add
call Screen.drawLine 4
pop temp 0
push local 0
push constant 1
add
push local 1
push local 0
push constant 8
add
push local 1
push constant 9
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push constant 2
add
call Screen.drawPixel 2
pop temp 0
push local 0
push local 1
push constant 7
add
call Screen.drawPixel 2
pop temp 0
label IF_FALSE3
push constant 0
return
function Block.moveHeadBlock 3
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 0
push argument 0
push constant 0
call Block.getCoord 2
pop local 1
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
pop local 0
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 1
push constant 1
sub
pop local 1
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 1
push constant 1
add
pop local 1
label IF_FALSE3
push local 0
push local 1
call Block.new 2
pop local 2
push local 2
push constant 0
not
call Block.drawFullBlock 2
pop temp 0
push local 2
return
function Block.seeIfLose 11
push constant 0
pop local 0
push constant 0
pop local 1
push constant 0
pop local 2
push argument 0
push constant 1
sub
pop local 6
push local 6
push argument 1
add
pop pointer 1
push that 0
pop local 9
push local 9
push constant 0
not
call Block.getCoord 2
pop local 3
push local 9
push constant 0
call Block.getCoord 2
pop local 4
push argument 2
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 3
push constant 1
add
pop local 3
label IF_FALSE0
push argument 2
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 3
push constant 1
sub
pop local 3
label IF_FALSE1
push argument 2
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 4
push constant 1
sub
pop local 4
label IF_FALSE2
push argument 2
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 4
push constant 1
add
pop local 4
label IF_FALSE3
push local 3
push constant 0
lt
push local 3
push constant 50
gt
or
push local 4
push constant 24
gt
or
push local 4
push constant 0
lt
or
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
not
pop local 0
label IF_FALSE4
push constant 1
pop local 5
label WHILE_EXP0
push local 5
push local 6
lt
not
if-goto WHILE_END0
push local 5
push argument 1
add
pop pointer 1
push that 0
pop local 10
push local 10
push constant 0
not
call Block.getCoord 2
pop local 7
push local 10
push constant 0
call Block.getCoord 2
pop local 8
push local 3
push local 7
eq
push local 4
push local 8
eq
and
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
pop local 1
label IF_FALSE5
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP0
label WHILE_END0
push constant 1
pop local 5
push argument 4
pop local 6
label WHILE_EXP1
push local 5
push local 6
lt
not
if-goto WHILE_END1
push local 5
push argument 3
add
pop pointer 1
push that 0
pop local 10
push local 10
push constant 0
not
call Block.getCoord 2
pop local 7
push local 10
push constant 0
call Block.getCoord 2
pop local 8
push local 3
push local 7
eq
push local 4
push local 8
eq
and
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
not
pop local 1
label IF_FALSE6
push local 5
push constant 1
add
pop local 5
goto WHILE_EXP1
label WHILE_END1
push local 0
push local 1
or
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 0
not
pop local 2
label IF_FALSE7
push local 2
return
function Block.dispose 0
push argument 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Block.setBlockInfo 0
push argument 0
pop static 0
push argument 1
pop static 1
push constant 0
return
function Block.pattern 4
push argument 2
push argument 0
sub
call Math.abs 1
pop local 0
push argument 3
push argument 1
sub
call Math.abs 1
pop local 1
push argument 2
push argument 0
sub
push argument 4
sub
call Math.abs 1
push constant 2
call Math.divide 2
pop local 2
push argument 3
push argument 1
sub
call Math.abs 1
push constant 2
call Math.divide 2
pop local 3
push constant 0
pop argument 4
push constant 0
not
call Screen.setColor 1
pop temp 0
label WHILE_EXP0
push local 3
push argument 4
push constant 1
sub
gt
not
if-goto WHILE_END0
push argument 0
push local 2
add
push argument 1
push argument 4
add
push argument 2
push local 2
sub
push argument 1
push argument 4
add
call Screen.drawLine 4
pop temp 0
push argument 0
push local 2
add
push argument 3
push argument 4
sub
push argument 2
push local 2
sub
push argument 3
push argument 4
sub
call Screen.drawLine 4
pop temp 0
push argument 4
push constant 1
add
pop argument 4
push local 2
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push local 2
add
push argument 1
push argument 4
add
push argument 2
push local 2
sub
push argument 1
push argument 4
add
call Screen.drawLine 4
pop temp 0
push argument 0
push local 2
add
push argument 3
push argument 4
sub
push argument 2
push local 2
sub
push argument 3
push argument 4
sub
call Screen.drawLine 4
pop temp 0
push local 2
push constant 1
sub
pop local 2
label IF_FALSE0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Block.drawRandBlock 6
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 4
push argument 0
push constant 0
call Block.getCoord 2
pop local 5
push local 4
push static 0
call Math.multiply 2
push static 1
add
pop local 0
push local 5
push static 0
call Math.multiply 2
push static 1
add
pop local 1
push local 4
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 2
push local 5
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 3
push local 0
push local 1
push local 2
push local 3
push constant 1
call Block.pattern 5
pop temp 0
push constant 0
return
function Block.drawMBlock 6
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 4
push argument 0
push constant 0
call Block.getCoord 2
pop local 5
push local 4
push static 0
call Math.multiply 2
push static 1
add
pop local 0
push local 5
push static 0
call Math.multiply 2
push static 1
add
pop local 1
push local 4
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 2
push local 5
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 2
push constant 1
sub
push local 3
push constant 1
sub
call Screen.drawRectangle 4
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push constant 1
add
push local 1
push constant 1
add
push local 2
push constant 1
sub
push local 3
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push local 2
push constant 1
sub
push local 1
push constant 1
add
push local 0
push constant 1
add
push local 3
push constant 1
sub
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Block.drawnegRandBlock 6
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 4
push argument 0
push constant 0
call Block.getCoord 2
pop local 5
push local 4
push static 0
call Math.multiply 2
push static 1
add
pop local 0
push local 5
push static 0
call Math.multiply 2
push static 1
add
pop local 1
push local 4
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 2
push local 5
push static 0
call Math.multiply 2
push static 0
add
push static 1
sub
pop local 3
push constant 0
not
call Screen.setColor 1
pop temp 0
push local 0
push local 1
push local 2
push local 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
call Screen.setColor 1
pop temp 0
push local 0
push constant 2
add
push local 1
push constant 2
add
push local 2
push constant 2
sub
push local 3
push constant 2
sub
call Screen.drawRectangle 4
pop temp 0
push local 0
push constant 2
add
push local 1
push constant 2
add
push local 2
push constant 2
sub
push local 3
push constant 2
sub
push constant 0
call Block.pattern 5
pop temp 0
push constant 0
return
function Block.printBlockCoord 5
push argument 0
push constant 0
not
call Block.getCoord 2
pop local 3
push argument 0
push constant 0
call Block.getCoord 2
pop local 4
push constant 1
call String.new 1
push constant 40
call String.appendChar 2
pop local 0
push constant 1
call String.new 1
push constant 44
call String.appendChar 2
pop local 1
push constant 1
call String.new 1
push constant 41
call String.appendChar 2
pop local 2
push local 0
call Output.printString 1
pop temp 0
push local 3
call Output.printInt 1
pop temp 0
push local 1
call Output.printString 1
pop temp 0
push local 4
call Output.printInt 1
pop temp 0
push local 2
call Output.printString 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
call String.dispose 1
pop temp 0
push local 1
call String.dispose 1
pop temp 0
push local 2
call String.dispose 1
pop temp 0
push constant 0
return
function Block.negRandBlock 8
push constant 0
pop local 2
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
push constant 0
pop local 2
push constant 0
pop local 7
label WHILE_EXP0
push local 2
push argument 1
lt
not
if-goto WHILE_END0
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 0
not
call Block.getCoord 2
pop local 5
push local 4
push constant 0
call Block.getCoord 2
pop local 6
push local 5
push local 0
eq
push local 6
push local 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
pop local 7
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
push argument 2
push constant 0
not
call Block.getCoord 2
push local 0
eq
push argument 2
push constant 0
call Block.getCoord 2
push local 1
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
pop local 7
label IF_FALSE1
goto WHILE_EXP0
label WHILE_END0
label WHILE_EXP1
push local 7
not
if-goto WHILE_END1
push constant 50
call Rand.randRange 1
pop local 0
push constant 24
call Rand.randRange 1
pop local 1
label WHILE_EXP2
push local 2
push argument 1
lt
not
if-goto WHILE_END2
push local 2
push argument 0
add
pop pointer 1
push that 0
pop local 4
push local 4
push constant 0
not
call Block.getCoord 2
pop local 5
push local 4
push constant 0
call Block.getCoord 2
pop local 6
push local 5
push local 0
eq
push local 6
push local 1
eq
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
pop local 7
label IF_FALSE2
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP2
label WHILE_END2
push argument 2
push constant 0
not
call Block.getCoord 2
push local 0
eq
push argument 2
push constant 0
call Block.getCoord 2
push local 1
eq
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
not
pop local 7
label IF_FALSE3
goto WHILE_EXP1
label WHILE_END1
push local 0
push local 1
call Block.new 2
pop local 3
push local 3
call Block.drawnegRandBlock 1
pop temp 0
push local 3
return
